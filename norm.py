import math

def norm(pos, L):
	m = []
	i = 0
	while i < 12:
		m.append(pos[i])
		i = i + 1
	p00, p01, p02, p03 = 0.0, 0.0, 0.0, 0.0
	p10, p11, p12, p13 = 0.0, 0.0, 0.0, 0.0
	p20, p21, p22, p23 = 0.0, 0.0, 0.0, 0.0
	
	p00 = ((m[0]+m[1]+m[2]+m[3])*(m[0]+m[4]+m[8]))/(L**2)
	p01 = ((m[0]+m[1]+m[2]+m[3])*(m[1]+m[5]+m[9]))/(L**2)
	p02 = ((m[0]+m[1]+m[2]+m[3])*(m[2]+m[6]+m[10]))/(L**2)
	p03 = ((m[0]+m[1]+m[2]+m[3])*(m[3]+m[7]+m[11]))/(L**2)
	p10 = ((m[4]+m[5]+m[6]+m[7])*(m[0]+m[4]+m[8]))/(L**2)
	p11 = ((m[4]+m[5]+m[6]+m[7])*(m[1]+m[5]+m[9]))/(L**2)
	p12 = ((m[4]+m[5]+m[6]+m[7])*(m[2]+m[6]+m[10]))/(L**2)
	p13 = ((m[4]+m[5]+m[6]+m[7])*(m[3]+m[7]+m[11]))/(L**2)
	p20 = ((m[8]+m[9]+m[10]+m[11])*(m[0]+m[4]+m[8]))/(L**2)
	p21 = ((m[8]+m[9]+m[10]+m[11])*(m[1]+m[5]+m[9]))/(L**2)
	p22 = ((m[8]+m[9]+m[10]+m[11])*(m[2]+m[6]+m[10]))/(L**2)
	p23 = ((m[8]+m[9]+m[10]+m[11])*(m[3]+m[7]+m[11]))/(L**2)
	
	y00 = (m[0]-L*p00)/(math.sqrt(L*p00*(1-p00)))
	y01 = (m[1]-L*p01)/(math.sqrt(L*p01*(1-p01)))
	y02 = (m[2]-L*p02)/(math.sqrt(L*p02*(1-p02)))
	y03 = (m[3]-L*p03)/(math.sqrt(L*p03*(1-p03)))
	y10 = (m[4]-L*p10)/(math.sqrt(L*p10*(1-p10)))
	y11 = (m[5]-L*p11)/(math.sqrt(L*p11*(1-p11)))
	y12 = (m[6]-L*p12)/(math.sqrt(L*p12*(1-p12)))
	y13 = (m[7]-L*p13)/(math.sqrt(L*p13*(1-p13)))
	y20 = (m[8]-L*p20)/(math.sqrt(L*p20*(1-p20)))
	y21 = (m[9]-L*p21)/(math.sqrt(L*p21*(1-p21)))
	y22 = (m[10]-L*p22)/(math.sqrt(L*p22*(1-p22)))
	y23 = (m[11]-L*p23)/(math.sqrt(L*p23*(1-p23)))
	
	normmat = [y00,y01,y02,y03,y10,y11,y12,y13,y20,y21,y22,y23]
	#print(normmat)
	return normmat
